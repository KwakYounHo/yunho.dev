services:
  client:
    build:
      context: ./client
      dockerfile: dockerfile.dev
    container_name: client-dev
    networks:
      - app-dev
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    volumes:
      - ./client:/app
  api:
    build:
      context: ./api
    container_name: api-dev
    networks:
      - app-dev
    environment:
      - DEPLOY_MODE=development
    volumes:
      - ./api:/app
  analysis:
    build: 
      context: ./analysis
    container_name: analysis-dev
    networks:
      - app-dev
    environment:
      - DEPLOY_MODE=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./analysis:/app
  db:
    build:
      context: ./db
    container_name: db-dev
    networks:
      - app-dev
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
  cache:
    build:
      context: ./cache
    container_name: cache-dev
    networks:
      - app-dev

  proxy:
    build:
      context: ./proxy
      dockerfile: dockerfile.dev
    container_name: proxy-dev
    networks:
      - app-dev
    ports:
      - 80:80
      - 443:443

networks:
  app-dev:
    driver: bridge
