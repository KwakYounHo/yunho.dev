services:
  client:
    image: ${GHCR_IMAGE_URL}/client:latest
    networks:
      - proxy
      - cache
    environment:
      - NODE_ENV=production
      - DOMAIN_NAME=${DOMAIN_NAME}
      - NEXT_PUBLIC_GENIUS_API_KEY=${NEXT_PUBLIC_GENIUS_API_KEY}

  api:
    image: ${GHCR_IMAGE_URL}/api:latest
    networks:
      - proxy
      - cache
      - db
    environment:
      - DEPLOY_MODE=production
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}

  analysis:
    image: ${GHCR_IMAGE_URL}/analysis:latest
    networks:
      - cache
      - db
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    volumes:
      - ./analysis/prompt_template:/app/prompt_template
  
  cache:
    image: ${GHCR_IMAGE_URL}/cache:latest
    networks:
      - cache

  db:
    image: ${GHCR_IMAGE_URL}/db:latest
    networks:
      - db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data

  proxy:
    image: ${GHCR_IMAGE_URL}/proxy:latest
    ports:
      - 80:80
      - 443:443 
    networks:
      - proxy
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/var/log/letsencrypt:/var/log/letsencrypt

networks:
  proxy:
    driver: bridge
  db:
    driver: bridge
  cache:
    driver: bridge

volumes:
  db_data:
    external: true